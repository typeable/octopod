name: Build and release
on:
  push:
    branches:
      - master
      - develop
      - staging
  pull_request:
    branches:
      - master
      - develop
      - staging
  workflow_dispatch:
    inputs:
      release:
        description: Release the new version?
        required: false
        default: "true"
      version:
        description: The version to release
        required: true

jobs:
  check-formatting:
    name: Check Haskell formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: cachix/install-nix-action@v12
      - name: Run fourmolu
        run: |
          nix-shell nix/ci.nix -j auto --run "git ls-files '*.hs' | xargs fourmolu -m inplace --ghc-opt -XRecursiveDo --ghc-opt -XTypeApplications"
          git diff --exit-code

  octo-macOS:
    name: macOS octo CLI Release (Stack)
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache stack dependencies
        uses: actions/cache@v2
        with:
          path: ~/.stack
          key: octo-cli-stack-${{ runner.os }}
      # TODO: Remove this step once https://github.com/actions/cache/issues/445 is resolved.
      - name: Fix macOS cache bug
        run: rm -rf ~/.stack/setup-exe-cache
      - name: Build
        run: stack build octo-cli --local-bin-path out --copy-bins
      - uses: actions/upload-artifact@v2
        with:
          name: octo-cli-macos
          path: out/octo
  octo-linux:
    name: Linux octo CLI Release (Nix)
    runs-on: ubuntu-latest
    timeout-minutes: 600
    steps:
      - uses: actions/checkout@v2
      - name: Common setup
        uses: ./.github/actions/common_setup
        with:
          cachixSigningKey: ${{ secrets.CACHIX_SIGNING_KEY }}
      - name: Build
        run: nix-build -A projectCross.musl64.hsPkgs.octo-cli.components.exes.octo --arg prod true -j auto
      - uses: actions/upload-artifact@v2
        with:
          name: octo-cli-linux
          path: result/bin/octo
  docker-images:
    name: Docker Images
    runs-on: ubuntu-latest
    timeout-minutes: 600
    steps:
      - uses: actions/checkout@v2

      - name: Common setup
        uses: ./.github/actions/common_setup
        with:
          cachixSigningKey: ${{ secrets.CACHIX_SIGNING_KEY }}

      - name: Build Docker Images
        run: nix-build ./nix -j auto

      - name: Push Nightly Docker Images to DockerHub
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        uses: ./.github/actions/push_docker_images
        with:
          tag: nightly
          docker_username: ${{ secrets.DOCKERHUB_USERNAME }}
          docker_password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Rename Docker image archives
        run: |
          cp $(nix-build ./nix -j auto -A octo-cli-container) octo-cli-image.tar.gz
          cp $(nix-build ./nix -j auto -A octopod-server-container) octopod-server-image.tar.gz

      - name: Upload octo CLI Image
        uses: actions/upload-artifact@v2
        with:
          name: octo-cli-image
          path: octo-cli-image.tar.gz

      - name: Upload Octopod Server Image
        uses: actions/upload-artifact@v2
        with:
          name: octopod-server-image
          path: octopod-server-image.tar.gz
  release:
    name: Release
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.release == 'true'
    needs: [octo-macOS, octo-linux, docker-images]
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v2
      - name: Common setup
        uses: ./.github/actions/common_setup
        with:
          cachixSigningKey: ${{ secrets.CACHIX_SIGNING_KEY }}
      - name: Push Docker Images to DockerHub
        uses: ./.github/actions/push_docker_images
        with:
          tag: ${{ github.event.inputs.version }}
          docker_username: ${{ secrets.DOCKERHUB_USERNAME }}
          docker_password: ${{ secrets.DOCKERHUB_TOKEN }}

      - uses: actions/download-artifact@v2
      - name: Zip and move
        run: |
          chmod +x octo-cli-macos/octo
          zip octo-cli-macos octo-cli-macos/octo
          chmod +x octo-cli-linux/octo
          zip octo-cli-linux octo-cli-linux/octo

          mv octo-cli-image/* .
          mv octopod-server-image/* .
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: false
          title: "${{ github.event.inputs.version }}"
          files: |
            *.zip
            *.tar.gz
